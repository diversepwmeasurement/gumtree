concurrency:
  cancel-in-progress: true
  group: build-${{ github.head_ref || github.ref }}
jobs:
  build-test-deploy:
    container: gumtreediff/gumtree:latest
    environment: MavenCentral
    if: ${{ !(contains(github.event.head_commit.message, '[no ci]') || startsWith(github.event.head_commit.message,
      'doc')) }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: checkout gumtree
      uses: actions/checkout@v4
      with:
        show-progress: ''
        submodules: recursive
    - continue-on-error: true
      id: version
      name: retrieve gumtree version
      run: echo "VERSION=$(cat build.gradle | grep "projectsVersion =" | cut -f 2
        -d "'")" >> $GITHUB_OUTPUT
      shell: bash
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
    - continue-on-error: true
      name: build gumtree
      run: ./gradlew -PtestNative build :benchmark:runOnDefects4J :benchmark:ciDefects4JAnalysis
    - continue-on-error: true
      name: upload defects4j results
      uses: actions/upload-artifact@v2
      with:
        name: defects4j-report
        path: benchmark/build/reports/defects4j*
    - continue-on-error: true
      name: generate jacoco report
      run: ./gradlew jacocoRootReport
    - continue-on-error: true
      name: upload coverage report
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: build/reports/jacoco/jacocoRootReport/html/
    - continue-on-error: true
      name: generate test report
      run: ./gradlew testReport
    - continue-on-error: true
      name: upload test report
      uses: actions/upload-artifact@v2
      with:
        name: test-report
        path: build/reports/tests
    - continue-on-error: true
      env:
        ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.ORG_GRADLE_PROJECT_SONATYPEPASSWORD
          }}
        ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.ORG_GRADLE_PROJECT_SONATYPEUSERNAME
          }}
      if: ${{ github.event_name == 'schedule' && contains(steps.version.outputs.VERSION,
        'SNAPSHOT') }}
      name: upload snapshot package
      run: ./gradlew publish
    - continue-on-error: true
      env:
        ORG_GRADLE_PROJECT_gumtreeKey: ${{ secrets.GUMTREE_KEY }}
        ORG_GRADLE_PROJECT_gumtreeKeyPassphrase: ${{ secrets.GUMTREE_KEY_PASSPHRASE
          }}
        ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.ORG_GRADLE_PROJECT_SONATYPEPASSWORD
          }}
        ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.ORG_GRADLE_PROJECT_SONATYPEUSERNAME
          }}
      if: ${{ github.event_name == 'push' && !contains(steps.version.outputs.VERSION,
        'SNAPSHOT') && endsWith(github.ref, steps.version.outputs.VERSION) }}
      name: upload release package
      run: ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository
    - continue-on-error: true
      if: ${{ github.event_name == 'push' && !contains(steps.version.outputs.VERSION,
        'SNAPSHOT') && endsWith(github.ref, steps.version.outputs.VERSION) }}
      name: create github release
      uses: ncipollo/release-action@v1
      with:
        artifacts: dist/build/distributions/gumtree*.zip
        bodyFile: CHANGELOG.md
        token: ${{ secrets.GITHUB_TOKEN }}
  docker:
    if: ${{ !(contains(github.event.head_commit.message, '[no ci]') || startsWith(github.event.head_commit.message,
      'doc')) }}
    needs: build-test-deploy
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: set up docker buildx
      uses: docker/setup-buildx-action@v3
    - continue-on-error: true
      name: Cache Docker layers
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-buildx
        path: /tmp/.buildx-cache
    - continue-on-error: true
      id: set-tag
      name: set docker image tag
      run: "if [[ $GITHUB_REF == refs/tags/v* ]]; then\n  echo \"IMAGE_TAG=$(echo\
        \ $GITHUB_REF | sed 's/refs\\/tags\\///')\" >> $GITHUB_ENV\nelse\n  echo \"\
        IMAGE_TAG=latest\" >> $GITHUB_ENV\nfi\n"
    - continue-on-error: true
      env:
        SECRET: ${{ secrets.DOCKERHUB_TOKEN }}
      id: checksecrets
      name: check secrets presence
      run: "if [ \"$SECRET\" == \"\" ]; then\n  echo \"secretspresent=false\" >> $GITHUB_OUTPUT\n\
        else\n  echo \"secretspresent=true\" >> $GITHUB_OUTPUT\nfi\n"
      shell: bash
    - continue-on-error: true
      if: (steps.checksecrets.outputs.secretspresent == 'true')
      name: login to Docker Hub
      uses: docker/login-action@v3
      with:
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
    - continue-on-error: true
      name: build and push docker image
      uses: docker/build-push-action@v5
      with:
        file: docker/Dockerfile
        push: false
        tags: gumtreediff/gumtree:${{ env.IMAGE_TAG }}
name: Build, Test and Deploy GumTree
on:
  repository_dispatch:
    types: trigger-ga___build-test-gumtree.yml
